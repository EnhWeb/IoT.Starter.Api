/*
 * API Cadastro
 *
 * Teste para workflow API-based:   - Restlet gera API e exporta swagger.json   - NSwag importa arquivo e gera server stub e client class    
 *
 * OpenAPI spec version: 1.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class CompaniesApiController : Controller
    { 

        /// <summary>
        /// Delete a Company
        /// </summary>
        /// <remarks>Deletes a Company</remarks>
        /// <param name="companyid">Identifier of the Company</param>
        /// <response code="200">Status 200</response>
        [HttpDelete]
        [Route("/companies/{companyid}")]
        [SwaggerOperation("CompaniesCompanyidDelete")]
        public virtual void CompaniesCompanyidDelete([FromRoute]string companyid)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Load an individual Company
        /// </summary>
        /// <remarks>Loads a Company</remarks>
        /// <param name="companyid">Identifier of the Company</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        [HttpGet]
        [Route("/companies/{companyid}")]
        [SwaggerOperation("CompaniesCompanyidGet")]
        [SwaggerResponse(200, type: typeof(Company))]
        public virtual IActionResult CompaniesCompanyidGet([FromRoute]string companyid)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Company>(exampleJson)
            : default(Company);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Update a Company
        /// </summary>
        /// <remarks>Stores a Company</remarks>
        /// <param name="companyid">Identifier of the Company</param>
        /// <param name="body"></param>
        /// <response code="200">Status 200</response>
        [HttpPut]
        [Route("/companies/{companyid}")]
        [SwaggerOperation("CompaniesCompanyidPut")]
        [SwaggerResponse(200, type: typeof(Company))]
        public virtual IActionResult CompaniesCompanyidPut([FromRoute]string companyid, [FromBody]Company body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Company>(exampleJson)
            : default(Company);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Load the list of Companies
        /// </summary>
        /// <remarks>Loads a list of Company</remarks>
        /// <param name="size">Size of the page to retrieve.</param>
        /// <param name="page">Number of the page to retrieve.</param>
        /// <param name="sort">Order in which to retrieve the results. Multiple sort criteria can be passed. Example: sort&#x3D;age ASC,height DESC</param>
        /// <param name="name">Allows to filter the collections of result by the value of field name</param>
        /// <response code="200">Status 200</response>
        /// <response code="400">Status 400</response>
        [HttpGet]
        [Route("/companies/")]
        [SwaggerOperation("CompaniesGet")]
        [SwaggerResponse(200, type: typeof(List<Company>))]
        public virtual IActionResult CompaniesGet([FromQuery]int? size, [FromQuery]decimal? page, [FromQuery]string sort, [FromQuery]string name)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Company>>(exampleJson)
            : default(List<Company>);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Create a new Company
        /// </summary>
        /// <remarks>Adds a Company</remarks>
        /// <param name="body"></param>
        /// <response code="200">Status 200</response>
        [HttpPost]
        [Route("/companies/")]
        [SwaggerOperation("CompaniesPost")]
        [SwaggerResponse(200, type: typeof(Company))]
        public virtual IActionResult CompaniesPost([FromBody]Company body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Company>(exampleJson)
            : default(Company);
            return new ObjectResult(example);
        }
    }
}
